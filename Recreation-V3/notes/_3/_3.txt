A new control mode function is called by Sonic in Routine #1. Upon entering this routine, the stored
control mode script will be executed, and a series of functions will be called based on Sonic's current
conditions. In the original game, and in the older iterations of my engine, Sonic's status was determined
by a bitfield. In this iteration, a bitfield will be replaced by a series of booleans. Congruent to the
bitfield, here are the boolean flags:

Flipped (If true, facing left)
In Air (If true, in the air)
Spinning
On Object (Not on tiles, but not in air)
Rolling Jump (!)
Pushing
In Water

The Rolling Jump lock will not be emulated in this version of the engine, though I might keep the code
intact, just in case others who use this engine wish to emulate this functionality.

The Control script runs one of three modes depending on the following conditions:
Normal Control (Grounded, not spinning)
Rolling Control (Grounded, spinning)
Air Control (In air, regardless of spinning)
These control scripts can be found in each character's respective Player folder, which is color coded.
They have the name: ctrl_[CHAR_NAME].

Each mode runs a series of functions that control the player character on each frame. These functions
are found in Game Objects>Player>Control. At this stage of the build, only grounded movement is being
emulated. This is followed by a function that sets x/y positions according to their respective speeds.
Along with this, additions have been made to handle the animations related to walking/running in the
End Step Event, and mask handling has been added to the end of the Begin Step event.

Speed variables required for the movement code are located in ctrl_Player_SetSpeeds, found in the same
folder as the MoveGround script.